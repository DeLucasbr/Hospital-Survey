# Criar guia final de implementa√ß√£o

implementation_guide = '''# Guia de Implementa√ß√£o Completo
## Sistema de Pesquisa de Satisfa√ß√£o - Hospital Santa Clara

Este guia fornece um passo a passo detalhado para implementar o sistema de pesquisa de satisfa√ß√£o no Hospital Santa Clara de Colorado.

## üéØ Vis√£o Geral do Sistema

O sistema foi desenvolvido seguindo as especifica√ß√µes do c√≥digo React Native fornecido, mas migrado para uma aplica√ß√£o web completa usando:

- **Backend**: FastAPI (Python) - Alta performance e f√°cil manuten√ß√£o
- **Frontend**: HTML/CSS/JavaScript com Bootstrap - Interface responsiva e moderna
- **Banco de Dados**: MySQL - Robusto e confi√°vel para ambiente hospitalar
- **Visualiza√ß√µes**: Chart.js - Gr√°ficos interativos para insights
- **Deploy**: Docker - Facilita instala√ß√£o e manuten√ß√£o

## üèóÔ∏è Arquitetura da Solu√ß√£o

### 1. Camada de Apresenta√ß√£o (Frontend)
- **Interface de Pesquisa**: Otimizada para tablets, replicando exatamente o layout do React Native
- **Dashboard de Insights**: Interface administrativa para an√°lise dos dados
- **Design Responsivo**: Funciona em tablets, desktops e celulares

### 2. Camada de Aplica√ß√£o (Backend)
- **API RESTful**: Endpoints para submiss√£o de pesquisas e consulta de dados
- **Valida√ß√£o de Dados**: Garante integridade das informa√ß√µes
- **C√°lculos Autom√°ticos**: Pontua√ß√£o de satisfa√ß√£o e estat√≠sticas

### 3. Camada de Dados (Banco)
- **Estrutura Normalizada**: Otimizada para consultas anal√≠ticas
- **Views Pr√©-constru√≠das**: Facilita gera√ß√£o de relat√≥rios
- **√çndices Otimizados**: Performance para grandes volumes

## üìã Pr√©-requisitos de Instala√ß√£o

### Op√ß√£o 1: Instala√ß√£o com Docker (Recomendada)
**Vantagens**: Instala√ß√£o autom√°tica, isolamento, f√°cil backup

**Requisitos m√≠nimos**:
- Docker e Docker Compose instalados
- 4GB RAM dispon√≠vel
- 10GB espa√ßo em disco
- Portas 8000, 3306, 8080 livres

### Op√ß√£o 2: Instala√ß√£o Manual
**Vantagens**: Mais controle, integra√ß√£o com sistemas existentes

**Requisitos**:
- Python 3.8+
- MySQL 8.0+
- 2GB RAM dispon√≠vel
- 5GB espa√ßo em disco

## üöÄ Instala√ß√£o Passo a Passo

### OP√á√ÉO 1: Docker (Mais Simples)

#### Passo 1: Preparar ambiente
```bash
# 1. Baixar arquivos do projeto (substitua pelo m√©todo que voc√™ usar√°)
mkdir hospital-survey
cd hospital-survey

# 2. Colocar todos os arquivos do projeto na pasta
# (main.py, templates/, docker-compose.yml, etc.)
```

#### Passo 2: Executar
```bash
# 1. Iniciar containers
docker-compose up -d

# 2. Verificar se est√° funcionando
curl http://localhost:8000

# 3. Acessar aplica√ß√µes
# Pesquisa: http://localhost:8000
# Dashboard: http://localhost:8000/dashboard
# Banco de dados: http://localhost:8080 (phpMyAdmin)
```

### OP√á√ÉO 2: Instala√ß√£o Manual

#### Passo 1: Configurar MySQL
```bash
# 1. Instalar MySQL (Ubuntu/Debian)
sudo apt update
sudo apt install mysql-server

# 2. Configurar seguran√ßa
sudo mysql_secure_installation

# 3. Criar banco de dados
mysql -u root -p < database_setup.sql
```

#### Passo 2: Configurar Python
```bash
# 1. Criar ambiente virtual
python3 -m venv venv
source venv/bin/activate  # Linux/Mac
# ou
venv\\Scripts\\activate  # Windows

# 2. Instalar depend√™ncias
pip install -r requirements.txt
```

#### Passo 3: Configurar aplica√ß√£o
```bash
# 1. Copiar configura√ß√µes
cp .env.example .env

# 2. Editar configura√ß√µes do banco
nano .env
# Alterar: DATABASE_URL=mysql+pymysql://user:password@localhost/hospital_satisfaction
```

#### Passo 4: Executar
```bash
# 1. Iniciar aplica√ß√£o
uvicorn main:app --host 0.0.0.0 --port 8000

# 2. Testar
open http://localhost:8000
```

## ‚öôÔ∏è Configura√ß√µes Importantes

### 1. Configura√ß√µes do Banco de Dados (.env)
```env
# Para MySQL local
DATABASE_URL=mysql+pymysql://hospital_user:senha_segura@localhost/hospital_satisfaction

# Para MySQL remoto
DATABASE_URL=mysql+pymysql://usuario:senha@servidor.hospital.com:3306/hospital_satisfaction

# Para desenvolvimento (SQLite)
DATABASE_URL=sqlite:///./hospital_satisfaction.db
```

### 2. Configura√ß√µes de Email (para relat√≥rios)
```env
SMTP_HOST=smtp.gmail.com
SMTP_PORT=587
SMTP_USER=relatorios@hospitalsantaclaracolorado.com.br
SMTP_PASSWORD=sua_senha_de_app
SMTP_FROM=noreply@hospitalsantaclaracolorado.com.br
```

### 3. Configura√ß√µes de Seguran√ßa (produ√ß√£o)
```env
DEBUG=False
SECRET_KEY=gere_uma_chave_secreta_forte_aqui
ALLOWED_HOSTS=seu-dominio.com,ip-do-servidor
```

## üì± Como Usar o Sistema

### Para a Equipe de Enfermagem (Tablets)

1. **Acessar**: `http://ip-do-servidor:8000`
2. **Preencher dados do paciente**:
   - Nome (ou marcar "An√¥nimo")
   - Data de interna√ß√£o
   - Data de alta
3. **Responder quest√µes**:
   - Se√ß√£o 1: Atendimento (3 perguntas)
   - Se√ß√£o 2: Instala√ß√µes (2 perguntas)
   - Se√ß√£o 3: Comunica√ß√£o (2 perguntas)
   - Se√ß√£o 4: Filantropia (2 perguntas)
   - Se√ß√£o 5: Recomenda√ß√£o (1 pergunta)
4. **Adicionar observa√ß√µes** (opcional)
5. **Enviar pesquisa**

### Para a Diretoria (Dashboard)

1. **Acessar**: `http://ip-do-servidor:8000/dashboard`
2. **Visualizar m√©tricas**:
   - Total de respostas
   - Satisfa√ß√£o m√©dia geral
   - Taxa de resposta
   - Crescimento mensal
3. **Analisar gr√°ficos**:
   - Tend√™ncia de satisfa√ß√£o ao longo do tempo
   - Distribui√ß√£o de n√≠veis de satisfa√ß√£o
   - Compara√ß√£o entre se√ß√µes
4. **Revisar insights autom√°ticos**:
   - Pontos fortes identificados
   - √Åreas de melhoria
   - Recomenda√ß√µes de a√ß√£o

## üìä Interpreta√ß√£o dos Insights

### M√©tricas Principais
- **Satisfa√ß√£o M√©dia**: Escala de 1-5, sendo 4+ considerado bom
- **Taxa de Resposta**: % de pacientes que respondem (meta: >80%)
- **Distribui√ß√£o**: Idealmente >70% "Satisfeito" ou "Muito Satisfeito"

### Sinais de Alerta
- Satisfa√ß√£o m√©dia <3.5 em qualquer se√ß√£o
- Tend√™ncia de queda por 2+ meses consecutivos
- Taxa de resposta <60%
- Aumento de coment√°rios negativos

### A√ß√µes Recomendadas
- **Comunica√ß√£o baixa**: Treinamento da equipe em comunica√ß√£o clara
- **Instala√ß√µes baixas**: Verificar limpeza e manuten√ß√£o
- **Atendimento baixo**: Revis√£o de protocolos de atendimento
- **Filantropia baixa**: Melhorar comunica√ß√£o da miss√£o social

## üîß Manuten√ß√£o e Monitoramento

### Backup Di√°rio (Importante!)
```bash
# Backup autom√°tico MySQL
mysqldump -u root -p hospital_satisfaction > backup_$(date +%Y%m%d).sql

# Backup com Docker
docker exec mysql_container mysqldump -u root -p hospital_satisfaction > backup.sql
```

### Logs de Sistema
```bash
# Ver logs da aplica√ß√£o
tail -f app.log

# Ver logs do Docker
docker-compose logs -f web
```

### Atualiza√ß√µes
```bash
# Parar sistema
docker-compose down

# Atualizar c√≥digo
git pull  # se usando Git

# Reiniciar
docker-compose up -d
```

## üö® Solu√ß√£o de Problemas Comuns

### 1. "Connection refused" - Banco n√£o conecta
```bash
# Verificar se MySQL est√° rodando
sudo systemctl status mysql

# Verificar configura√ß√µes no .env
cat .env | grep DATABASE_URL

# Testar conex√£o manual
mysql -u usuario -p -h localhost
```

### 2. "Permission denied" - Problemas de acesso
```bash
# Verificar permiss√µes de arquivos
ls -la templates/
chmod 755 templates/

# Verificar usu√°rio MySQL
SHOW GRANTS FOR 'hospital_user'@'localhost';
```

### 3. "Internal Server Error" - Erro na aplica√ß√£o
```bash
# Ver logs detalhados
uvicorn main:app --log-level debug

# Verificar depend√™ncias
pip list | grep fastapi
```

### 4. Interface n√£o carrega no tablet
- Verificar se o tablet est√° na mesma rede
- Testar com IP espec√≠fico: `http://192.168.1.100:8000`
- Verificar firewall do servidor
- Usar navegador atualizado (Chrome, Firefox)

## üìà Otimiza√ß√µes de Performance

### Para muitos usu√°rios simult√¢neos
```bash
# Usar Gunicorn com m√∫ltiplos workers
pip install gunicorn
gunicorn main:app -w 4 -k uvicorn.workers.UvicornWorker --bind 0.0.0.0:8000
```

### Para banco de dados grande
```sql
-- Criar √≠ndices adicionais
CREATE INDEX idx_created_date ON surveys (DATE(created_at));
CREATE INDEX idx_section_score ON survey_responses (question_id, response_score);
```

### Proxy reverso (produ√ß√£o)
```nginx
# /etc/nginx/sites-available/hospital-survey
server {
    listen 80;
    server_name pesquisa.hospitalsantaclara.com.br;
    
    location / {
        proxy_pass http://127.0.0.1:8000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
    }
}
```

## üîê Seguran√ßa em Produ√ß√£o

### 1. SSL/HTTPS obrigat√≥rio
```bash
# Com Let's Encrypt
sudo apt install certbot python3-certbot-nginx
sudo certbot --nginx -d pesquisa.hospitalsantaclara.com.br
```

### 2. Firewall
```bash
# Permitir apenas portas necess√°rias
sudo ufw allow 22   # SSH
sudo ufw allow 80   # HTTP
sudo ufw allow 443  # HTTPS
sudo ufw enable
```

### 3. Backup autom√°tico
```bash
# Crontab para backup di√°rio
0 2 * * * /home/usuario/backup_hospital.sh
```

## üìû Contato e Suporte

Para implementa√ß√£o e suporte:
- **Email t√©cnico**: ti@hospitalsantaclaracolorado.com.br
- **Documenta√ß√£o**: http://localhost:8000/docs (quando rodando)
- **Arquivos do projeto**: [incluir localiza√ß√£o dos arquivos]

---

**Sistema desenvolvido especificamente para o Hospital Santa Clara de Colorado**
**Focado na praticidade e gera√ß√£o de insights valiosos para a diretoria**
'''

# Criar arquivo de troubleshooting
troubleshooting = '''# Guia de Solu√ß√£o de Problemas
## Sistema de Pesquisa de Satisfa√ß√£o

## üö® Problemas Mais Comuns

### 1. Sistema n√£o inicia
**Erro**: "Application startup failed"

**Solu√ß√µes**:
```bash
# Verificar se todas as depend√™ncias est√£o instaladas
pip install -r requirements.txt

# Verificar configura√ß√µes do .env
cat .env

# Testar conex√£o com banco
python -c "from sqlalchemy import create_engine; engine = create_engine('SEU_DATABASE_URL'); engine.connect()"
```

### 2. Banco de dados n√£o conecta
**Erro**: "Can't connect to MySQL server"

**Solu√ß√µes**:
```bash
# Verificar se MySQL est√° rodando
sudo systemctl status mysql
sudo systemctl start mysql

# Testar conex√£o manual
mysql -u root -p

# Verificar usu√°rios e permiss√µes
mysql -u root -p -e "SELECT user, host FROM mysql.user;"
```

### 3. Pesquisa n√£o envia
**Erro**: Forms n√£o funcionam

**Solu√ß√µes**:
- Verificar se todas as perguntas foram respondidas
- Abrir console do navegador (F12) para ver erros JavaScript
- Verificar se o endpoint `/api/submit-survey` est√° funcionando
- Testar com curl:
```bash
curl -X POST http://localhost:8000/api/submit-survey -H "Content-Type: application/json" -d '{}'
```

### 4. Dashboard n√£o carrega dados
**Erro**: Gr√°ficos vazios

**Solu√ß√µes**:
```bash
# Verificar se h√° dados no banco
mysql -u root -p hospital_satisfaction -e "SELECT COUNT(*) FROM surveys;"

# Testar endpoint de dados
curl http://localhost:8000/api/dashboard-data

# Verificar logs da aplica√ß√£o
tail -f app.log
```

## üîç Diagn√≥stico Passo a Passo

### 1. Verifica√ß√£o B√°sica
```bash
# Sistema operacional
uname -a

# Python instalado
python3 --version

# MySQL instalado
mysql --version

# Espa√ßo em disco
df -h

# Mem√≥ria dispon√≠vel
free -m

# Portas em uso
netstat -tlnp | grep :8000
```

### 2. Verifica√ß√£o da Aplica√ß√£o
```bash
# Depend√™ncias Python
pip list | grep -E "(fastapi|sqlalchemy|pymysql)"

# Configura√ß√µes
env | grep -E "(DATABASE|MYSQL)"

# Logs de erro
tail -n 50 app.log

# Teste de conectividade
curl -I http://localhost:8000
```

### 3. Verifica√ß√£o do Banco
```sql
-- Conectar no MySQL
mysql -u root -p

-- Verificar banco
SHOW DATABASES;
USE hospital_satisfaction;

-- Verificar tabelas
SHOW TABLES;

-- Verificar dados
SELECT COUNT(*) FROM surveys;
SELECT COUNT(*) FROM questions;
SELECT COUNT(*) FROM survey_responses;

-- Verificar usu√°rios
SELECT user, host FROM mysql.user WHERE user LIKE 'hospital%';
```

## üîß Ferramentas de Debug

### 1. Modo Debug da Aplica√ß√£o
```python
# Em main.py, adicionar no final:
if __name__ == "__main__":
    import uvicorn
    uvicorn.run("main:app", host="0.0.0.0", port=8000, reload=True, log_level="debug")
```

### 2. Logs Detalhados
```python
import logging
logging.basicConfig(level=logging.DEBUG)

# Adicionar no in√≠cio de main.py
```

### 3. Teste Manual das APIs
```bash
# Testar endpoint de quest√µes
curl http://localhost:8000/api/questions

# Testar submiss√£o de pesquisa
curl -X POST http://localhost:8000/api/submit-survey \\
  -H "Content-Type: application/x-www-form-urlencoded" \\
  -d "patient_name=Teste&admission_date=2025-01-01&discharge_date=2025-01-02&q1_1=Satisfeito(a)"

# Testar dados do dashboard
curl http://localhost:8000/api/dashboard-data
```

## üì± Problemas Espec√≠ficos do Tablet

### Tela n√£o se adapta
- Verificar meta viewport no HTML
- Testar diferentes navegadores
- Verificar CSS responsivo

### Touch n√£o funciona adequadamente
- Aumentar tamanho dos bot√µes/checkboxes
- Verificar z-index de elementos
- Testar com diferentes tablets

### Lentid√£o na interface
- Otimizar JavaScript
- Reduzir tamanho das imagens
- Verificar conex√£o de rede

## üåê Problemas de Rede

### Aplica√ß√£o n√£o acess√≠vel
```bash
# Verificar se est√° ouvindo na porta correta
netstat -tlnp | grep 8000

# Verificar firewall
sudo ufw status

# Testar localmente primeiro
curl http://127.0.0.1:8000

# Depois testar por IP
curl http://IP-DO-SERVIDOR:8000
```

### Timeout de conex√£o
- Aumentar timeouts do MySQL
- Verificar lat√™ncia de rede
- Otimizar consultas SQL

## üíæ Recupera√ß√£o de Dados

### Backup corrompido
```bash
# Verificar integridade
mysql < backup.sql --force

# Recuperar tabelas espec√≠ficas
mysql hospital_satisfaction < backup_questions.sql
```

### Dados perdidos
```sql
-- Verificar logs do MySQL
SHOW VARIABLES LIKE 'general_log%';

-- Recuperar de backups parciais
-- (sempre manter m√∫ltiplos backups!)
```

## üìû Quando Pedir Ajuda

Entre em contato se:
- Problemas persistem ap√≥s tentar as solu√ß√µes
- Erro cr√≠tico que afeta opera√ß√£o
- Necessidade de personaliza√ß√£o
- D√∫vidas sobre interpreta√ß√£o de dados

**Inclua sempre**:
- Sistema operacional
- Vers√£o do Python e MySQL
- Mensagem de erro completa
- Logs relevantes
- Passos para reproduzir o problema

---

**Lembre-se**: A maioria dos problemas tem solu√ß√£o simples. Siga o passo a passo e n√£o hesite em pedir ajuda!
'''

# Salvar os guias
with open('IMPLEMENTACAO.md', 'w', encoding='utf-8') as f:
    f.write(implementation_guide)

with open('TROUBLESHOOTING.md', 'w', encoding='utf-8') as f:
    f.write(troubleshooting)

print("‚úÖ Guias adicionais criados:")
print("   - IMPLEMENTACAO.md  (Guia completo de implementa√ß√£o)")
print("   - TROUBLESHOOTING.md (Solu√ß√£o de problemas)")
print("\nüéØ Sistema completo desenvolvido!")
print("\nPr√≥ximos passos recomendados:")
print("1. Revisar a aplica√ß√£o web criada: hospital-satisfaction-survey")
print("2. Configurar servidor MySQL")
print("3. Personalizar templates conforme necess√°rio")
print("4. Testar em tablets do hospital")
print("5. Treinar equipe para uso")
print("6. Implementar em produ√ß√£o")
print("\nüí° O sistema replica exatamente as funcionalidades do React Native")
print("   mas com vantagens de uma aplica√ß√£o web gerenciada pelo FastAPI!")